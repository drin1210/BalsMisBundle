<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class BalsMisBundleEntityCLCProxy extends \Bals\MisBundle\Entity\CLC implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setAddress($address)
    {
        $this->__load();
        return parent::setAddress($address);
    }

    public function getAddress()
    {
        $this->__load();
        return parent::getAddress();
    }

    public function setCLCSince($cLCSince)
    {
        $this->__load();
        return parent::setCLCSince($cLCSince);
    }

    public function getCLCSince()
    {
        $this->__load();
        return parent::getCLCSince();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setWithFunctionalMobileLibrary($withFunctionalMobileLibrary)
    {
        $this->__load();
        return parent::setWithFunctionalMobileLibrary($withFunctionalMobileLibrary);
    }

    public function getWithFunctionalMobileLibrary()
    {
        $this->__load();
        return parent::getWithFunctionalMobileLibrary();
    }

    public function setGeographicId($geographicId)
    {
        $this->__load();
        return parent::setGeographicId($geographicId);
    }

    public function getGeographicId()
    {
        $this->__load();
        return parent::getGeographicId();
    }

    public function setRegion($region)
    {
        $this->__load();
        return parent::setRegion($region);
    }

    public function getRegion()
    {
        $this->__load();
        return parent::getRegion();
    }

    public function setProvince($province)
    {
        $this->__load();
        return parent::setProvince($province);
    }

    public function getProvince()
    {
        $this->__load();
        return parent::getProvince();
    }

    public function setCityMunicipality($cityMunicipality)
    {
        $this->__load();
        return parent::setCityMunicipality($cityMunicipality);
    }

    public function getCityMunicipality()
    {
        $this->__load();
        return parent::getCityMunicipality();
    }

    public function setDivision($division)
    {
        $this->__load();
        return parent::setDivision($division);
    }

    public function getDivision()
    {
        $this->__load();
        return parent::getDivision();
    }

    public function setDistrict($district)
    {
        $this->__load();
        return parent::setDistrict($district);
    }

    public function getDistrict()
    {
        $this->__load();
        return parent::getDistrict();
    }

    public function setBarangay($barangay)
    {
        $this->__load();
        return parent::setBarangay($barangay);
    }

    public function getBarangay()
    {
        $this->__load();
        return parent::getBarangay();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'Name', 'Address', 'CLC_since', 'Type', 'WithFunctionalMobileLibrary', 'Geographic_id', 'Region', 'Province', 'City_municipality', 'Division', 'District', 'Barangay');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}